/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminTablasRouteImport } from './routes/admin.tablas'
import { Route as AdminReportesRouteImport } from './routes/admin.reportes'
import { Route as AdminAccionesRouteImport } from './routes/admin.acciones'

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTablasRoute = AdminTablasRouteImport.update({
  id: '/tablas',
  path: '/tablas',
  getParentRoute: () => AdminRoute,
} as any)
const AdminReportesRoute = AdminReportesRouteImport.update({
  id: '/reportes',
  path: '/reportes',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAccionesRoute = AdminAccionesRouteImport.update({
  id: '/acciones',
  path: '/acciones',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/acciones': typeof AdminAccionesRoute
  '/admin/reportes': typeof AdminReportesRoute
  '/admin/tablas': typeof AdminTablasRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/acciones': typeof AdminAccionesRoute
  '/admin/reportes': typeof AdminReportesRoute
  '/admin/tablas': typeof AdminTablasRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/acciones': typeof AdminAccionesRoute
  '/admin/reportes': typeof AdminReportesRoute
  '/admin/tablas': typeof AdminTablasRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/admin/acciones'
    | '/admin/reportes'
    | '/admin/tablas'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/admin/acciones' | '/admin/reportes' | '/admin/tablas'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/acciones'
    | '/admin/reportes'
    | '/admin/tablas'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/tablas': {
      id: '/admin/tablas'
      path: '/tablas'
      fullPath: '/admin/tablas'
      preLoaderRoute: typeof AdminTablasRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/reportes': {
      id: '/admin/reportes'
      path: '/reportes'
      fullPath: '/admin/reportes'
      preLoaderRoute: typeof AdminReportesRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/acciones': {
      id: '/admin/acciones'
      path: '/acciones'
      fullPath: '/admin/acciones'
      preLoaderRoute: typeof AdminAccionesRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminAccionesRoute: typeof AdminAccionesRoute
  AdminReportesRoute: typeof AdminReportesRoute
  AdminTablasRoute: typeof AdminTablasRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAccionesRoute: AdminAccionesRoute,
  AdminReportesRoute: AdminReportesRoute,
  AdminTablasRoute: AdminTablasRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
